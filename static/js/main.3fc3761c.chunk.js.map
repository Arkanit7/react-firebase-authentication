{"version":3,"sources":["firebase.js","contexts/AuthContextProvider.jsx","routes.js","components/Home.jsx","components/Login.jsx","components/Signup.jsx","components/PriveRoute.jsx","components/ForgotPassword.jsx","components/UpdateProfile.jsx","components/App.jsx","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuthContext","useContext","AuthContextProvider","children","useState","currentUser","setCurrentUser","setLoading","useEffect","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","routes","HOME","LOGIN","SIGNUP","PASSWORD","UPDATE","Home","loading","error","setError","history","useHistory","e","a","preventDefault","push","ROUTES","message","Card","className","Body","Alert","variant","Button","disabled","onClick","to","Login","emailRef","useRef","passwordRef","current","Form","onSubmit","Group","id","Label","Control","type","ref","required","Signup","passwordConfirmRef","PriveRoute","props","ForgotPassword","setMessage","UpdateProfile","promises","Promise","all","then","catch","finally","placeholder","App","Container","style","minHeight","maxWidth","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3fc3761c.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\nimport \"firebase/auth\";\r\n\r\nconst app = firebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n});\r\n\r\nexport default app;\r\nexport const auth = app.auth();","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { auth } from \"../firebase\";\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuthContext() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nfunction AuthContextProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [, setLoading] = useState(false);\r\n\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut();\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email);\r\n  }\r\n\r\n\tfunction updateEmail(email) {\r\n\t\treturn currentUser.updateEmail(email);\r\n\t}\r\n\r\n\t\tfunction updatePassword(password) {\r\n      return currentUser.updatePassword(password);\r\n    }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      setCurrentUser(user);\r\n      setLoading(false);\r\n    });\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const value = {\r\n    currentUser,\r\n    signup,\r\n    login,\r\n    logout,\r\n    resetPassword,\r\n\t\tupdateEmail,\r\n\t\tupdatePassword\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n}\r\n\r\nexport default AuthContextProvider;\r\n","const routes = { HOME: \"/\", LOGIN: \"/login\", SIGNUP: \"/signup\", PASSWORD: \"/forgot_password\", UPDATE: \"/update_profile\" };\r\nexport default routes;\r\n","import { useState } from \"react\";\r\nimport { Button, Card, Alert } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useAuthContext } from \"../contexts/AuthContextProvider\";\r\nimport ROUTES from \"../routes\";\r\n\r\nfunction Home() {\r\n  const { currentUser, logout } = useAuthContext();\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  async function handleLogout(e) {\r\n    e.preventDefault();\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await logout();\r\n      history.push(ROUTES.LOGIN);\r\n    } catch (err) {\r\n      setLoading(false);\r\n      setError(err.message);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"w-100 mb-2\">\r\n        <Card.Body>\r\n          <h1 className=\"text-center mb-4\">Personal page</h1>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <p className=\"text-center mb-4\">{currentUser?.email}</p>\r\n          <Button\r\n            disabled={loading}\r\n            variant=\"warning\"\r\n            className=\"w-100\"\r\n            onClick={handleLogout}\r\n          >\r\n            Log out\r\n          </Button>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center\">\r\n        <Link to={ROUTES.UPDATE}>Update profile</Link>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { useRef, useState } from \"react\";\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useAuthContext } from \"../contexts/AuthContextProvider\";\r\nimport ROUTES from \"../routes\";\r\n\r\nfunction Login() {\r\n  const emailRef = useRef(\"\");\r\n  const passwordRef = useRef(\"\");\r\n  const { login } = useAuthContext();\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await login(emailRef.current.value, passwordRef.current.value);\r\n      setLoading(false);\r\n      history.push(ROUTES.HOME);\r\n    } catch (err) {\r\n      setError(err.message);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"w-100\">\r\n        <Card.Body>\r\n          <h1 className=\"text-center mb-4\">Log in</h1>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\" className=\"mb-4\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} required />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\" className=\"mb-4\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordRef} required />\r\n            </Form.Group>\r\n            <Button disabled={loading} className=\"w-100 mb-2\" type=\"submit\">\r\n              Log in\r\n            </Button>\r\n            <div className=\"w-100 text-center\">\r\n              <Link to={ROUTES.PASSWORD}>Forgot password?</Link>\r\n            </div>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        Need an account? <Link to={ROUTES.SIGNUP}>Sign up</Link>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import { useRef, useState } from \"react\";\r\nimport { Alert, Button, Card, Form } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useAuthContext } from \"../contexts/AuthContextProvider\";\r\nimport ROUTES from \"../routes\";\r\n\r\nfunction Signup() {\r\n  const emailRef = useRef(\"\");\r\n  const passwordRef = useRef(\"\");\r\n  const passwordConfirmRef = useRef(\"\");\r\n  const { signup } = useAuthContext();\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value)\r\n      return setError(\"Passwords don't match.\");\r\n\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await signup(emailRef.current.value, passwordConfirmRef.current.value);\r\n      setLoading(false);\r\n      history.push(ROUTES.HOME);\r\n    } catch (err) {\r\n      setLoading(false);\r\n      setError(err.message);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"w-100\">\r\n        <Card.Body>\r\n          <h1 className=\"text-center mb-4\">Sign Up</h1>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\" className=\"mb-4\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} required />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\" className=\"mb-4\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordRef} required />\r\n            </Form.Group>\r\n            <Form.Group id=\"password-confirm\" className=\"mb-4\">\r\n              <Form.Label>Password confirmation</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n            </Form.Group>\r\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n              Sign Up\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        Already have an account? <Link to={ROUTES.LOGIN}>Log In</Link>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","import { Redirect, Route } from \"react-router\";\r\nimport { useAuthContext } from \"../contexts/AuthContextProvider\";\r\nimport routes from \"../routes\";\r\n\r\nfunction PriveRoute(props) {\r\n  const { currentUser } = useAuthContext();\r\n  return (\r\n    <Route {...props}>\r\n      {currentUser ? props.children : <Redirect to={routes.LOGIN} />}\r\n    </Route>\r\n  );\r\n}\r\n\r\nexport default PriveRoute;\r\n","import { useRef, useState } from \"react\";\r\nimport { Alert, Button, Card, Form } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuthContext } from \"../contexts/AuthContextProvider\";\r\nimport ROUTES from \"../routes\";\r\n\r\nfunction ForgotPassword() {\r\n  const emailRef = useRef(\"\");\r\n  const { resetPassword } = useAuthContext();\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    try {\r\n      setMessage(\"\");\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await resetPassword(emailRef.current.value);\r\n      setMessage(\r\n        `An email with instructions to reset password has been sent to ${emailRef.current.value}.`\r\n      );\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"w-100\">\r\n        <Card.Body>\r\n          <h1 className=\"text-center mb-4\">Password reset</h1>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          {message && <Alert variant=\"success\">{message}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\" className=\"mb-4\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} required />\r\n            </Form.Group>\r\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n              Reset\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        Already have an account? <Link to={ROUTES.LOGIN}>Log In</Link>\r\n      </div>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        Need an account? <Link to={ROUTES.SIGNUP}>Sign up</Link>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ForgotPassword;\r\n","import { useRef, useState } from \"react\";\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuthContext } from \"../contexts/AuthContextProvider\";\r\nimport ROUTES from \"../routes\";\r\n\r\nfunction UpdateProfile() {\r\n  const { currentUser, updateEmail, updatePassword } = useAuthContext();\r\n  const emailRef = useRef(\"\");\r\n  const passwordRef = useRef(\"\");\r\n  const passwordConfirmRef = useRef(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\");\r\n    }\r\n\r\n    const promises = [];\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    if (emailRef.current.value !== currentUser.email) {\r\n      promises.push(updateEmail(emailRef.current.value));\r\n    }\r\n    if (passwordRef.current.value) {\r\n      promises.push(updatePassword(passwordRef.current.value));\r\n    }\r\n\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        setMessage(\"Success!\");\r\n      })\r\n      .catch(({ message }) => {\r\n        setError(message);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"w-100\">\r\n        <Card.Body>\r\n          <h1 className=\"text-center mb-4\">Update Profile</h1>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          {message && <Alert variant=\"success\">{message}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\" className=\"mb-4\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                ref={emailRef}\r\n                placeholder=\"Leave empty to not change it.\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\" className=\"mb-4\">\r\n              <Form.Label>New password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                ref={passwordRef}\r\n                placeholder=\"Leave empty to not change it.\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group id=\"password-confirm\" className=\"mb-4\">\r\n              <Form.Label>Confirm new password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                ref={passwordConfirmRef}\r\n                placeholder=\"Leave empty to not change it.\"\r\n              />\r\n            </Form.Group>\r\n            <Button disabled={loading} className=\"w-100 mb-2\" type=\"submit\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        <Link to={ROUTES.HOME}>Dashboard</Link>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpdateProfile;\r\n","import { Container } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport AuthContextProvider from \"../contexts/AuthContextProvider\";\r\nimport ROUTES from \"../routes\";\r\nimport Home from \"./Home\";\r\nimport Login from \"./Login\";\r\nimport Signup from \"./Signup\";\r\nimport PrivateRoute from \"./PriveRoute\";\r\nimport ForgotPassword from \"./ForgotPassword\";\r\nimport UpdateProfile from \"./UpdateProfile\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Container\r\n        className=\"d-flex flex-column align-items-center justify-content-center\"\r\n        style={{ minHeight: \"100vh\", maxWidth: \"400px\" }}\r\n      >\r\n        <Router>\r\n          <Switch>\r\n            <AuthContextProvider>\r\n              <Route path={ROUTES.SIGNUP}>\r\n                <Signup />\r\n              </Route>\r\n              <Route path={ROUTES.LOGIN}>\r\n                <Login />\r\n              </Route>\r\n              <Route path={ROUTES.PASSWORD}>\r\n                <ForgotPassword />\r\n              </Route>\r\n              <PrivateRoute path={ROUTES.UPDATE}>\r\n                <UpdateProfile />\r\n              </PrivateRoute>\r\n              <PrivateRoute exact path={ROUTES.HOME}>\r\n                <Home />\r\n              </PrivateRoute>\r\n            </AuthContextProvider>\r\n          </Switch>\r\n        </Router>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport App from \"./components/App.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}